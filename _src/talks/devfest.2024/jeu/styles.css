@layer fonts, base, layout, design, animation, utilities, preferences;

@layer fonts {
	@font-face {
		font-display: swap;
		font-family: 'Luckiest Guy';
		font-style: normal;
		font-weight: 400;
		src: url('./assets/fonts/LuckiestGuy-Regular.woff2') format('woff2');
	}

	@font-face {
		font-display: swap;
		font-family: 'Zilla Slab';
		font-style: normal;
		font-weight: 400;
		src: url('./assets/fonts/ZillaSlab-Regular.woff2') format('woff2');
	}

	@font-face {
		font-display: swap;
		font-family: 'Zilla Slab';
		font-style: italic;
		font-weight: 400;
		src: url('./assets/fonts/ZillaSlab-Italic.woff2') format('woff2');
	}

	@font-face {
		font-display: swap;
		font-family: 'Zilla Slab';
		font-style: normal;
		font-weight: 700;
		src: url('./assets/fonts/ZillaSlab-Bold.woff2') format('woff2');
	}

	@font-face {
		font-display: swap;
		font-family: 'Zilla Slab';
		font-style: italic;
		font-weight: 700;
		src: url('./assets/fonts/ZillaSlab-BoldItalic.woff2') format('woff2');
	}

	/* @todo Subset + unicode-range pour chaque niveau ? */
	@font-face {
		font-display: block;
		font-family: 'Twemoji Mozilla';
		font-style: normal;
		font-weight: 400;
		src: local('Twemoji Mozilla'), url('./assets/fonts/Twemoji.woff2') format('woff2');
	}

	@font-face {
		font-display: swap;
		font-family: 'FontWithASyntaxHighlighter';
		src: url('./assets/fonts/FontWithASyntaxHighlighter-Regular.woff2') format('woff2');
	}
}

@layer base {
	html:where([lang]) {
		--background: #231745;
		--foreground: #ffd529;
		--accent: lime;
		--muted: #767676;

		box-sizing: border-box;
		caret-color: var(--accent);
		color-scheme: dark;
		overflow-y: scroll;
		position: relative;
		text-size-adjust: none;
	}

	html:where([lang]):focus-within {
		scroll-behavior: smooth;
	}

	*,
	*::after,
	*::before {
		box-sizing: inherit;
	}

	body {
		background: var(--background);
		color: var(--foreground);
		font: normal 400 2rem/1.5 sans-serif;
		font-family: 'Zilla Slab', system-ui, sans-serif;
		margin: 0;
		min-block-size: 100vh;
		overflow-x: hidden;
		position: relative;
		-webkit-font-smoothing: subpixel-antialiased;
		text-rendering: optimizeSpeed;
	}

	::selection {
		background-color: var(--accent);
		color: var(--background);
		text-shadow: none;
	}

	::placeholder {
		color: var(--muted);
	}

	code,
	pre,
	video,
	svg {
		max-inline-size: 100%;
	}

	svg {
		fill: currentColor;
	}

	[hidden],
	[role="alert"]:empty {
		display: none;
	}

	a,
	input,
	button,
	select,
	summary,
	textarea,
	[tabindex="0"] {
		outline-offset: 1rem;
		transition: outline-offset 0.3s var(--enter);
	}

	:focus {
		outline-color: transparent;
	}

	:focus-visible {
		box-shadow: 0 0 0 .125rem var(--background);
		isolation: isolate;
		outline: .125rem solid var(--accent);
		outline-offset: .125rem;
	}

	a {
		color: var(--secondary);
		text-decoration-style: dotted;
		text-decoration-skip-ink: auto;
		text-decoration-thickness: max(.1em, 1px);
		text-underline-offset: .25em;
	}

	a:hover {
		color: color-mix(var(--secondary) 60%, var(--background));
		text-decoration-style: solid;
	}

	a:focus {
		color: color-mix(var(--secondary) 60%, var(--background));
		text-decoration: none;
	}

	a:active {
		opacity: .75;
	}

	a,
	button {
		touch-action: manipulation;
	}

	a svg,
	button svg {
		pointer-events: none;
	}

	main {
		outline-color: transparent;
	}

	h1, h2, h3, h4, h5, h6 {
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
		margin: 3rem 0 1.5rem;
		text-rendering: optimizelegibility;
		text-wrap: balance;
	}

	:is(h1, h2, h3, h4, h5, h6):first-child {
		margin-block-start: 0;
	}

	div,
	textarea {
		hyphens: auto;
		word-wrap: break-word;
	}

	p, li, dd {
		hyphenate-limit-chars: 6 3 2;
		hyphenate-limit-lines: 2;
		hyphenate-limit-last: always;
		hyphenate-limit-zone: 8%;
		hyphens: auto;
		text-wrap: pretty;
		word-wrap: break-word;
	}

	pre, code, var, samp,
	input, textarea {
		font-family: "FontWithASyntaxHighlighter", monospace;
		font-size: 1.5rem;
	}

	pre {
		hyphens: none;
		line-height: 1.5;
		margin: 0;
		overflow-x: auto;
		padding: 0;
		tab-size: 4;
		text-align: start;
		white-space: pre;
		word-break: normal;
		word-spacing: normal;
		word-wrap: normal;
	}

	input,
	textarea {
		background-color: transparent;
		border: 1px solid var(--accent);
		font-size: 1.5rem;
		field-sizing: content;
		margin: .5rem 0;
		min-width: 32rem;
		padding: .5rem;
	}
}

@layer layout {
	body {
		display: grid;
		grid-template: 6rem auto / 1fr 1fr;
	}

	.splash {
		place-content: center;
		grid-template: initial;
	}

	main {
		grid-area: 2 / 1;
		padding: 2rem;
	}

	play-ground {
		block-size: 100vh;
		grid-area: 1 / 2 / span 2 / 2;
		overflow: hidden;
		place-content: center;
		position: relative;
	}

	mu-tant {
		aspect-ratio: 1;
		block-size: 6rem;
		display: inline-flex;
		place-content: center;
		position: absolute;
	}
}

@layer design {
	/**
	 @link https://codepen.io/enbee81/pen/WNdKLBY
	 @link https://codepen.io/gayane-gasparyan/pen/vYmYMeV
	 @link https://codepen.io/argyleink/pen/MWoeoKV
	 */
	h1 {
		color: var(--accent);
		font-family: 'Luckiest Guy', system-ui, sans-serif;
		font-size: 6rem;
		line-height: 1;
		padding: 2rem;
		paint-order: stroke fill;
		-webkit-text-stroke: .2em #000;
		transform:
			perspective(12rem)
			rotateY(12deg)
			rotateX(6deg);
		transform-origin: 0;
	}

	h1::first-line {
		color: var(--foreground);
		font-family: 'Zilla Slab', system-ui, sans-serif;
		font-size: 2.5rem;
		-webkit-text-stroke: initial;
		text-shadow: 0 0 .1em var(--foreground);
	}

	.splash h1 {
		font-size: 8rem;
		transform:
			perspective(50rem)
			rotateY(48deg)
			rotateX(24deg);
		transform-origin: 50%;
	}

	mu-tant,
	.splash h1::first-line {
		font-size: 4rem;
	}
}

@layer animation {
	@keyframes zombie {
		13% { transform: translateX(calc(12rem * var(--direction))) translateY(0); }
		26%, 78% { transform: translateX(calc(12rem * var(--direction))) translateY(calc(12rem * var(--direction))); }
		39% { transform: translateX(calc(24rem * var(--direction))) translateY(calc(12rem * var(--direction))); }
		52% { transform: translateX(calc(24rem * var(--direction))) translateY(calc(24rem * var(--direction))); }
		65% { transform: translateX(calc(12rem * var(--direction))) translateY(calc(24rem * var(--direction))); }
		91% { transform: translateX(0) translateY(calc(12rem * var(--direction))); }
	}

	[type="zombie"] {
		--direction: 1;
		animation: zombie 48s steps(48, end) infinite;
		inset-block-start: clamp(0%, var(--placement, 50) * 1%, 100%);
		inset-inline-start: clamp(0%, var(--placement, 50) * 1%, 100%);
		transform: translateX(0) translateY(0);
	}

	[type="zombie"]:nth-child(odd) {
		--direction: -1;
		inset-inline-start: clamp(0%, var(--placement, 50) * .5%, 50%);
	}

	[type="zombie"]:nth-child(3n +1) {
		inset-inline-start: clamp(50%, var(--placement, 50) * 1%, 100%);
		scale: .75;
	}

	[type="zombie"]:nth-child(4n +1) {
		inset-block-start: clamp(0%, var(--placement, 50) * .5%, 50%);
	}

	[type="zombie"]:nth-child(5n +1) {
		inset-block-start: clamp(50%, var(--placement, 50) * 1%, 100%);
		scale: .5;
	}

	[type="zombie"]:nth-child(6n +1) {
		inset-inline-start: clamp(50%, var(--placement, 50) * 1%, 100%);
	}
}

@layer utilities {
	.sr-only {
		border: 0;
		clip-path: inset(50%);
		height: 1px;
		margin: -1px;
		overflow: hidden;
		padding: 0;
		position: absolute;
		width: 1px;
		white-space: nowrap;
	}
}

@layer preferences {}
