@layer fonts, base, layout, design, animation, utilities, preferences;

@layer fonts {
	@font-face {
		font-display: swap;
		font-family: 'Luckiest Guy';
		font-style: normal;
		font-weight: 400;
		src: url('./assets/fonts/LuckiestGuy-Regular.woff2') format('woff2');
	}

	@font-face {
		font-display: swap;
		font-family: 'Zilla Slab';
		font-style: normal;
		font-weight: 400;
		src: url('./assets/fonts/ZillaSlab-Regular.woff2') format('woff2');
	}

	@font-face {
		font-display: swap;
		font-family: 'Zilla Slab';
		font-style: italic;
		font-weight: 400;
		src: url('./assets/fonts/ZillaSlab-Italic.woff2') format('woff2');
	}

	@font-face {
		font-display: swap;
		font-family: 'Zilla Slab';
		font-style: normal;
		font-weight: 700;
		src: url('./assets/fonts/ZillaSlab-Bold.woff2') format('woff2');
	}

	@font-face {
		font-display: swap;
		font-family: 'Zilla Slab';
		font-style: italic;
		font-weight: 700;
		src: url('./assets/fonts/ZillaSlab-BoldItalic.woff2') format('woff2');
	}

	/* @todo Subset + unicode-range pour chaque niveau ? */
	@font-face {
		font-display: swap;
		font-family: 'Twemoji Mozilla';
		font-style: normal;
		font-weight: 400;
		src: local('Twemoji Mozilla'), url('./assets/fonts/Twemoji.woff2') format('woff2');
	}

	@font-palette-values --syntaxHighlighter {
		font-family: 'FontWithASyntaxHighlighter';
		override-colors:
			0 var(--foreground),
			4 rebeccapurple,
			5 var(--accent),
			7 var(--muted);
	}

	@font-face {
		font-display: swap;
		font-family: 'FontWithASyntaxHighlighter';
		src: url('./assets/fonts/FontWithASyntaxHighlighter-Regular.woff2') format('woff2');
	}
}

@layer base {
	html:where([lang]) {
		--background: #231745;
		--foreground: #ffd529;
		--accent: lime;
		--muted: #fcd3c9;
		--enter: cubic-bezier(0, .5, .5, 1);

		box-sizing: border-box;
		caret-color: var(--accent);
		color-scheme: dark;
		overflow-y: scroll;
		position: relative;
		text-size-adjust: none;
	}

	html:where([lang]):focus-within {
		scroll-behavior: smooth;
	}

	*,
	*::after,
	*::before {
		box-sizing: inherit;
	}

	body {
		accent-color: var(--accent);
		background: var(--background);
		color: #fff;
		font: normal 400 1.25rem/1.5 sans-serif;
		font-family: 'Zilla Slab', system-ui, sans-serif;
		margin: 0;
		min-block-size: 100vh;
		overflow-x: hidden;
		position: relative;
		-webkit-font-smoothing: subpixel-antialiased;
	}

	::selection {
		background-color: var(--accent);
		color: var(--background);
		text-shadow: none;
	}

	::placeholder {
		color: var(--muted);
	}

	code,
	pre,
	video,
	svg {
		max-inline-size: 100%;
	}

	svg {
		fill: currentColor;
	}

	[hidden],
	[role="alert"]:empty {
		display: none;
	}

	a,
	input,
	button,
	select,
	summary,
	textarea,
	[tabindex="0"] {
		outline-offset: 1rem;
		transition: outline-offset .3s var(--enter);
	}

	:focus {
		outline-color: transparent;
	}

	:focus-visible {
		box-shadow: 0 0 0 .125rem var(--background);
		isolation: isolate;
		outline: .125rem solid;
		outline-offset: .125rem;
	}

	a,
	button {
		background-color: color-mix(in srgb, var(--background) 80%, #000);
		border: .25rem solid;
		border-radius: .25rem;
		color: var(--accent);
		display: inline-flex;
		font: inherit;
		font-weight: bold;
		padding: .25rem 1rem;
		text-decoration: none;
		touch-action: manipulation;
	}

	a:hover,
	button:hover {
		color: var(--foreground);
		cursor: pointer;
	}

	a svg,
	button svg {
		pointer-events: none;
	}

	main {
		outline-color: transparent;
	}

	h1, h2, h3, h4, h5, h6 {
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
		margin: 3rem 0 1.5rem;
		text-rendering: optimizelegibility;
		text-wrap: balance;
	}

	:is(h1, h2, h3, h4, h5, h6):first-child {
		margin-block-start: 0;
	}

	div,
	textarea {
		hyphens: auto;
		word-wrap: break-word;
	}

	p, li, dd {
		hyphenate-limit-chars: 6 3 2;
		hyphenate-limit-lines: 2;
		hyphenate-limit-last: always;
		hyphenate-limit-zone: 8%;
		hyphens: auto;
		text-wrap: pretty;
		word-wrap: break-word;
	}

	q {
		quotes: '« ' ' »';
	}

	pre, code, var, samp,
	input, textarea {
		font-family: 'FontWithASyntaxHighlighter', monospace;
		font-palette: --syntaxHighlighter;
		font-size: 1.15rem;
	}

	pre {
		hyphens: none;
		inline-size: min-content;
		line-height: 1.25;
		margin: 0;
		overflow-x: auto;
		padding: 0;
		tab-size: 4;
		text-align: start;
		white-space: pre;
		word-break: normal;
		word-spacing: normal;
		word-wrap: normal;
	}

	form {
		inline-size: min-content;
	}

	form[method="dialog"] {
		inline-size: 100%;
		text-align: center;
	}

	fieldset {
		border: 0;
	}

	input,
	textarea {
		background-color: color-mix(in srgb, var(--background) 75%, #000);
		border: 1px solid var(--accent);
		border-radius: .25rem;
		font-size: 1.15rem;
		margin-block: .5rem;
		margin-inline-start: calc(4ch * var(--tabs, 1));
		padding: 0 .5rem;
	}

	textarea,
	input:not([maxlength]) {
		inline-size: calc(100% - (4ch * var(--tabs, 1)));
	}

	input[type="radio"] {
		background-color: initial;
		border: 0;
		inline-size: auto;
	}

	input:focus-visible,
	textarea:focus-visible {
		outline-color: var(--accent);
	}

	[id="constructor"] {
		--tabs: 4;
		inline-size: 21ch;
		translate: .75ch -12rem;
	}

	[id="disconnect"] {
		--tabs: 4;
		inline-size: 11ch;
		translate: .875ch -10.25rem;
	}

	[id="observe"] {
		--tabs: 0;
		inline-size: 8ch;
		translate: -18.5ch -4.5rem;
	}

	[id="observe"] + p {
		margin-block-start: -3rem;
	}

	[id="condition"] {
		--tabs: 4;
		translate: -3.75ch -9.25rem;
	}

	[id="fonction"] {
		min-block-size: 8lh;
	}

	@media screen and (min-width: 60rem) {
		body {
			font-size: 1.5rem;
		}

		pre, code, var, samp,
		input, textarea {
			font-size: 1.5rem;
		}

		form p {
			text-align: end;
		}

		form[method="dialog"] {
			display: flex;
			gap: 2rem;
			justify-content: end;
		}

		[id="constructor"] {
			translate: .75ch -15.5rem;
		}

		[id="disconnect"] {
			translate: .875ch -12.875rem;
		}

		[id="observe"] {
			translate: -18.5ch -5.5rem;
		}

		[id="observe"] + p {
			margin-block-start: -5rem;
		}

		[id="condition"] {
			--tabs: 4;
			translate: -3.75ch -11.75rem;
		}
	}
}

@layer layout {
	body {
		display: grid;
		grid-template-rows: 8rem 1fr 1fr;
		max-inline-size: 100vw;
	}

	.splash {
		place-content: center;
		grid-template: initial;
	}

	main {
		grid-area: 2 / 1;
		max-inline-size: 100vw;
		padding: 1rem;
	}

	auto-portrait,
	auto-portrait form {
		display: block;
		inline-size: 100%;
	}

	auto-portrait legend {
		color: var(--accent);
		font-family: 'Luckiest Guy', sans-serif;
	}

	auto-portrait label {
		display: inline-flex;
	}

	auto-portrait input {
		--tabs: .5;
	}

	auto-portrait label:has( > [name="teint"]) {
		border-radius: 50%;
		margin-inline-start: 2ch;
		outline-offset: 1rem;
		transition: outline-offset .3s var(--enter);
	}

	auto-portrait label:has( > [name="teint"]:checked),
	auto-portrait label:has( > [name="teint"]):focus-within {
		box-shadow: 0 0 0 .125rem var(--background);
		isolation: isolate;
		outline: .125rem solid var(--accent);
		outline-offset: .125rem;
	}

	play-ground {
		background-color: color-mix(in srgb, var(--background) 75%, #000);
		border-radius: .5rem;
		contain: strict;
		grid-row: 3 / 3;
		margin: 1rem;
		overflow: hidden;
		position: relative;
	}

	play-ground::before {
		font-family: 'Twemoji Mozilla', 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji', sans-serif;
		font-size: calc(100vh + 10rem);
		line-height: calc(100vh + 10rem);
		inset: -5rem;
		position: absolute;
	}

	play-ground[type="zombie"]::before {
		content: '🌆';
	}

	play-ground[type="villain"]::before {
		content: '🌉';
		mix-blend-mode: soft-light;
	}

	play-ground[type="invaders"] {
		background-color: #000;
		counter-reset: invaders;
	}

	@counter-style invasion {
		system: numeric;
		symbols: "0" "1" "2" "3" "4" "5" "6" "7" "8" "9";
		pad: 5 "0";
		speak-as: numbers;
	}

	play-ground[type="invaders"]::after {
		content: "score\A" counter(invaders, invasion);
		font-family: "FontWithASyntaxHighlighter", monospace;
		font-weight: bold;
		inset-block-start: 2rem;
		inset-inline-end: 2rem;
		position: absolute;
		text-transform: uppercase;
		white-space: pre;
	}

	play-ground[type="ghost"]::before {
		content: '🌁';
	}

	play-ground[type="mage"]::before {
		content: '🏔️';
	}

	play-ground[type="skull"]::before {
		content: '🌫️';
		mix-blend-mode: soft-light;
	}

	play-ground[type="vampire"]::before {
		content: '🌃';
	}

	play-ground[type="all"]::before {
		content: '🌌';
	}

	mu-tant {
		aspect-ratio: 1;
		block-size: 6rem;
		display: inline-flex;
		font-family: 'Twemoji Mozilla', 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji', sans-serif;
		font-size: 4rem;
		place-content: center;
		position: absolute;
	}

	code-runner,
	train-er {
		background:
			local linear-gradient(to right, var(--background) 30%, transparent) 0 0/2.5rem 100% no-repeat,
			local linear-gradient(to right, transparent, var(--background) 70%) 100%/2.5rem 100% no-repeat,
			scroll radial-gradient(farthest-side at 0% 50%, #000, transparent) 0 0/1rem 100% no-repeat,
			var(--background) scroll radial-gradient(farthest-side at 100% 50%, #000, transparent) 100%/1rem 100% no-repeat;
		display: block;
		inline-size: 100%;
		overflow-x: scroll;
		overflow-y: hidden;
		-webkit-overflow-scrolling: touch;
		scroll-snap-type: both mandatory;
	}

	@media screen and (min-width: 60rem) {
		body {
			grid-template: 10rem auto / 1fr 1fr;
		}

		play-ground {
			grid-area: 1 / 2 / span 2 / 2;
			min-block-size: calc(100vh - 2rem);
		}

		auto-portrait fieldset {
			align-items: center;
			display: flex;
		}
	}
}

@layer design {
	dialog {
		background: var(--background);
		border-color: #000;
		border-radius: .5rem;
		box-shadow: 0 0 10rem #000;
		max-inline-size: clamp(50vw, 100%, 67.5rem);
	}

	dialog::backdrop {
		backdrop-filter: grayscale(50%) blur(.25rem);
	}

	dialog h2 {
		color: var(--accent);
		font-family: 'Luckiest Guy', system-ui, sans-serif;
	}

	dialog button,
	.splash button {
		background-color: transparent;
		border-color: transparent;
	}

	/**
	 @link https://codepen.io/enbee81/pen/WNdKLBY
	 @link https://codepen.io/gayane-gasparyan/pen/vYmYMeV
	 @link https://codepen.io/argyleink/pen/MWoeoKV
	 */
	h1 {
		color: var(--accent);
		font-family: 'Luckiest Guy', system-ui, sans-serif;
		font-size: 3rem;
		line-height: 1;
		padding: 1rem;
		transform:
			perspective(12rem)
			rotateY(12deg)
			rotateX(6deg);
		transform-origin: 0;
	}

	h1::first-line {
		color: var(--foreground);
		font-family: 'Zilla Slab', system-ui, sans-serif;
		font-size: 1.5rem;
		line-height: 1.875;
	}

	.splash h1 {
		font-size: 6rem;
		transform:
			perspective(12rem)
			rotateY(12deg)
			rotateX(6deg)
			translateX(10vw)
			scale(1.25);
	}

	.splash h1::first-line {
		font-size: 2.5rem;
	}

	@media screen and (min-width: 60rem) {
		h1 {
			font-size: 4rem;
		}

		h1::first-line {
			font-size: 1.75rem;
			line-height: 2;
		}

		.splash h1 {
			font-size: 8rem;
			transform:
				perspective(48rem)
				rotateY(48deg)
				rotateX(24deg);
			transform-origin: 50%;
		}

		.splash h1::first-line {
			font-size: 4rem;
		}
	}

	.splash main {
		max-inline-size: inherit;
		padding-block-start: 0;
		text-align: end;
	}

	.splash dialog {
		text-align: start;
	}

	footer {
		display: flex;
		flex-wrap: wrap;
		justify-content: center;
		margin-block-start: 6rem;
	}

	footer p {
		color: var(--muted);
		line-height: 2;
	}

	.networks {
		display: flex;
		filter: invert(1);
		list-style: none;
		padding: 0;
	}

	.networks > :last-child img {
		filter: brightness(0) invert(13%) sepia(18%) saturate(3274%) hue-rotate(153deg) brightness(95%) contrast(98%);
	}

	.networks a {
		background-color: transparent;
		border-color: transparent;
	}

	.credits a {
		border: 0;
		display: inline;
		padding: 0;
		text-decoration-style: dotted;
		text-decoration-skip-ink: auto;
		text-decoration-thickness: max(.1em, 1px);
		text-underline-offset: .25em;
	}

	.credits a:hover {
		text-decoration-style: solid;
	}

	.credits a:focus {
		text-decoration: none;
	}

	.carte {
		align-items: center;
		background-color: color-mix(in srgb, var(--background) 90%, #fff);
		border-radius: .5rem;
		display: flex;
		gap: 2rem;
		margin-block-end: 2rem;
		padding: 1rem;
	}

	.portrait {
		aspect-ratio: 1;
		block-size: 4rem;
		font: 4rem / 1 'Twemoji Mozilla', 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji', sans-serif;
		margin: 0;
		overflow: hidden;
	}

	.description {
		font-size: 1rem;
		inline-size: calc(100% - 4rem);
		line-height: 1.15;
		margin: 0;
	}

	@media screen and (min-width: 60rem) {
		.carte {
			margin-block-end: 4rem;
		}

		.portrait {
			block-size: 6rem;
			font-size: 6rem;
		}

		.description {
			font-size: 1.5rem;
			inline-size: calc(100% - 6rem);
			line-height: 1.25;
		}
	}
}

@layer animation {
	/* @fixme La répartition dans le playground n’est pas assez variée */
	mu-tant {
		--direction: 1;
		inset-block-start: clamp(0%, var(--placement, 50) * 1%, 100%);
		inset-inline-start: clamp(0%, var(--placement, 50) * 1%, 100%);
		transform: translateX(0) translateY(0);
	}

	mu-tant:nth-child(odd) {
		--direction: -1;
		inset-inline-start: clamp(0%, var(--placement, 50) * .5%, 50%);
	}

	mu-tant:nth-child(3n +1) {
		inset-inline-start: clamp(50%, var(--placement, 50) * 1%, 100%);
		scale: .75;
	}

	mu-tant:nth-child(4n +1) {
		inset-block-start: clamp(0%, var(--placement, 50) * .5%, 50%);
	}

	mu-tant:nth-child(5n +1) {
		inset-block-start: clamp(50%, var(--placement, 50) * 1%, 100%);
		scale: .5;
	}

	mu-tant:nth-child(6n +1) {
		inset-inline-start: clamp(50%, var(--placement, 50) * 1%, 100%);
	}

	@keyframes zombie {
		13% { transform: translateX(calc(12rem * var(--direction))) translateY(0); }
		26%, 78% { transform: translateX(calc(12rem * var(--direction))) translateY(calc(12rem * var(--direction))); }
		39% { transform: translateX(calc(24rem * var(--direction))) translateY(calc(12rem * var(--direction))); }
		52% { transform: translateX(calc(24rem * var(--direction))) translateY(calc(24rem * var(--direction))); }
		65% { transform: translateX(calc(12rem * var(--direction))) translateY(calc(24rem * var(--direction))); }
		91% { transform: translateX(0) translateY(calc(12rem * var(--direction))); }
	}

	mu-tant[type="zombie"] {
		animation: zombie 48s steps(48, end) infinite;
	}

	@keyframes ghost {
		10%, 90% { transform: translateX(calc(4rem * var(--direction))) translateY(6rem); }
		20%, 80% { transform: translateX(calc(8rem * var(--direction))) translateY(0); }
		30%, 70% { transform: translateX(calc(12rem * var(--direction))) translateY(6rem); }
		40%, 60% { transform: translateX(calc(16rem * var(--direction))) translateY(0); }
		50% { transform: translateX(calc(20rem * var(--direction))) translateY(6rem); }
	}

	@keyframes ghosting {
		50% { opacity: .5; }
	}

	mu-tant[type="ghost"] {
		animation: ghost 36s ease-out infinite, ghosting 3s ease-in infinite;
		opacity: 1;
	}

	@keyframes vampire {
		0% { transform: translateY(0) translateX(0) skewY(0); }
		5% { transform: translateY(calc(15rem * var(--direction))) translateX(0) skewY(25deg); }
		6%, 35% { transform: translateY(calc(15rem * var(--direction))) translateX(0) skewY(0); }
		40% { transform: translateY(calc(15rem * var(--direction))) translateX(calc(15rem * var(--direction))) skewY(25deg); }
		41%, 70% { transform: translateY(calc(15rem * var(--direction))) translateX(calc(15rem * var(--direction))) skewY(0); }
		75% { transform: translateY(calc(30rem * var(--direction))) translateX(calc(15rem * var(--direction))) skewY(25deg); }
		76%, 100% { transform: translateY(calc(30rem * var(--direction))) translateX(calc(15rem * var(--direction))) skewY(0); }
	}

	mu-tant[type="vampire"] {
		animation: vampire 6s linear infinite;
	}

	@keyframes invade {
		100% { transform: translateY(calc(100vh + 18rem)); }
	}

	@keyframes stepping {
		100% { scale: .75; }
	}

	mu-tant[type="invaders"] {
		animation: invade 24s ease-out 1 forwards, stepping 24s steps(12, end) 1 forwards;
		block-size: 2ex;
		counter-increment: invaders;
		inset-block-start: -6rem !important;
		inset-inline-start: auto !important;
		inline-size: 130%;
		letter-spacing: .25ch;
		scale: 1;
		text-align: center;
		text-indent: clamp(0ch, var(--placement, 50) * var(--direction) * .1ch, 20ch);
		white-space: nowrap;
	}

	/*
		@note Merci Barrett Sonntag
		@link https://codepen.io/sosuke/pen/Pjoqqp
	 */
	mu-tant[type="invaders"]:nth-child(1n + 1) {
		filter: grayscale(100%) brightness(0%) invert(15%) sepia(90%) saturate(5339%) hue-rotate(6deg) brightness(96%) contrast(127%);
	}

	mu-tant[type="invaders"]:nth-child(2n + 1) {
		filter: grayscale(100%) brightness(0%) invert(66%) sepia(82%) saturate(4488%) hue-rotate(88deg) brightness(117%) contrast(129%);
	}

	mu-tant[type="invaders"]:nth-child(3n + 1) {
		filter: grayscale(100%) brightness(0%) invert(9%) sepia(90%) saturate(7442%) hue-rotate(247deg) brightness(91%) contrast(149%);
	}

	mu-tant[type="invaders"]:nth-child(4n + 1) {
		filter: grayscale(100%) brightness(0%) invert(91%) sepia(27%) saturate(1428%) hue-rotate(1deg) brightness(110%) contrast(104%);
	}

	@keyframes villain {
		100% { transform: translateY(-15rem); }
	}

	mu-tant[type="villain"] {
		animation: villain 2s linear infinite;
		rotate: z calc(90deg * var(--direction));
	}

	mu-tant[type="troll"] span {
		display: inline-block;
		scale: .8;
	}
}

@layer utilities {
	.sr-only {
		border: 0;
		clip-path: inset(50%);
		height: 1px;
		margin: -1px;
		overflow: hidden;
		padding: 0;
		position: absolute;
		width: 1px;
		white-space: nowrap;
	}

	.float-right { float: right; }
}

@layer preferences {}
